# Simplified PyPI release pipeline

# At queue time, the user selects a Test or Production deployment. The following stages
# then Run
# - Predeployment validation (run a set of tests against the repository)
# - Creates a wheel and stores in Pipeline Artifact
# - Download wheel file from Artifact, pip install, and run tests
# - Upload the wheel to PyPI (Test or Production as specified at queue time)
# - Install from PyPI and run tests

parameters:
- name: releaseType
  displayName: Release Type
  type: string
  default: Test
  values:
  - Test
  - Production

variables:
  poolImage: "ubuntu-latest"
  poolPythonVersion: 3.6
  # Following is actually the name of the service connection from the Project Settings page
  kvSubscription: "Fairness - Automation (cecafb73-04ae-4432-9f96-d96925d28058)"
  kvVaultName: fairlearndeploy
  ${{ if eq(parameters.releaseType, 'Test')}}:
    kvUsername: usernametest
    kvPassword: passwordtest
    pypiUrl: https://test.pypi.org/legacy/
  ${{ if eq(parameters.releaseType, 'Production')}}:
    kvUsername: 'usernameprod'
    kvPassword: 'passwordprod'
    pypiUrl: https://upload.pypi.org/legacy/

trigger: none # No CI build

pr: none # Not for pull requests

# ==============================================

stages:
- template: templates/predeployment-validation-stage-template.yml
  parameters:
    stageName: PredeploymentValidation
    poolImage: $(PoolImage)
    freezeArtifactStem: PredeploymentValidationFreeze
    freezeFileStem: predeploy-requirements-freeze

# ==============================================

- template: templates/create-wheel-stage-template.yml
  parameters:
    stageName: CreateWheel
    previousStages: PredeploymentValidation
    poolImage: $(PoolImage)
    poolPythonVersion: 3.7
    packageArtifactName: Wheels
    versionArtifactName: Version
    versionFileName: versionInfo.txt
    freezeArtifactStem: CreateWheelFreeze
    freezeFile: requirements-freeze.txt

# ==============================================

- template: templates/wheel-artifact-tests-stage-template.yml
  parameters:
    stageName: TestWheel
    previousStages: CreateWheel
    poolImage: $(PoolImage)
    poolPythonVersion: 3.7
    packageArtifactName: Wheels
    freezeArtifactStem: TestWheelFreeze

# ==============================================

- template: templates/pypi-upload-stage-template.yml
  parameters:
    stageName: UploadWheel
    previousStages: TestWheel
    poolImage: $(PoolImage)
    poolPythonVersion: 3.6
    releaseType: ${{parameters.releaseType}}
    packageArtifactName: Wheels
    kvSubscription: $(kvSubscription)
    kvVaultName: $(kvVaultName)
    kvUsername: $(kvUsername)
    kvPassword: $(kvPassword)
    pypiUrl: $(pypiUrl)

# ==============================================

- template: templates/post-upload-validation.yml
  parameters:
    stageName: TestFromPyPI
    previousStages: UploadWheel
    poolImage: $(PoolImage)
    poolPythonVersion: 3.6
    releaseType: ${{parameters.releaseType}}
    versionArtifactName: Version
    versionFileName: versionInfo.txt
    freezeArtifactStem: TestPyPIFreeze
    freezeFileStem: requirements-freeze