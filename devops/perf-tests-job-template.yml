parameters:
  name: 'Performance'
  pyVersions: [3.7]
  datasets: ["adult_uci", "compas"]
  predictors: ["rbm_svm", "decision_tree_classifier"]
  mitigators: ["GridSearch", "ExponentiatedGradient", "ThresholdOptimizer"]
  serviceConnection: 'Fairness - Automation (cecafb73-04ae-4432-9f96-d96925d28058)' # This is actually the name of the service connection from the Project Settings page
  keyVaultName: fairlearn-automation
  servicePrincipalIdKeyVaultSecretName: 'fairlearnautomationspid'
  servicePrincipalSecretKeyVaultSecretName: 'fairlearnautomationspsecret'
  servicePrincipalTenantIdKeyVaultSecretName: 'fairlearnautomationsptenantid'
  subscriptionId: cecafb73-04ae-4432-9f96-d96925d28058
  resourceGroupName: fairlearn-automation
  workspaceName: fairlearnperf
  workspaceLocation: canadacentral

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 10
    matrix:
      ${{ each pyVer in parameters.pyVersions }}:
        ${{ pyVer }}:
          PyVer: ${{ pyVer }}
  timeoutInMinutes: 120

  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(PyVer)'
    inputs:
      versionSpec: '$(PyVer)' 
      addToPath: true

  - script: pip install -r requirements.txt
    displayName: 'Install required packages'

  - script: pip install azureml-sdk
    displayName: 'Install azureml-sdk'
  
  - task: AzureKeyVault@1
    displayName: "Fetch deployment secrets from KeyVault"
    inputs:
      azureSubscription: ${{parameters.serviceConnection}}
      keyVaultName:  ${{parameters.keyVaultName}}
      secretsFilter: '${{parameters.servicePrincipalIdKeyVaultSecretName}},${{parameters.servicePrincipalSecretKeyVaultSecretName}},${{parameters.servicePrincipalTenantIdKeyVaultSecretName}}'

  - script: python -m pytest -s test/perf --junitxml=./TEST--TEST.xml -o junit_suite_name="$(Agent.JobName)"
    displayName: 'Run Perf tests'
    env:
      SERVICE_PRINCIPAL_PASSWORD: "$(${{parameters.servicePrincipalSecretKeyVaultSecretName}})"
      SERVICE_PRINCIPAL_ID: "$(${{parameters.servicePrincipalIdKeyVaultSecretName}})"
      TENANT_ID: "$(${{parameters.servicePrincipalTenantIdKeyVaultSecretName}})"
      SUBSCRIPTION_ID: ${{parameters.subscriptionId}}
      RESOURCE_GROUP_NAME: ${{parameters.resourceGroupName}}
      WORKSPACE_NAME: ${{parameters.workspaceName}}
      WORKSPACE_LOCATION: ${{parameters.workspaceLocation}}

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/TEST-*.xml'
    condition: succeededOrFailed()
