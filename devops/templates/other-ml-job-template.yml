parameters:
  baseDir: test_othermlpackages
  condaEnv: test-conda-env
  envInfoArtifactBase: Environment
  envInfoDir: environment
  envInfoFileBase: env
  packages: { LightGBM: lightgbm, XGBoost: xgboost, TensorFlow: tensorflow, Pytorch: pytorch }
  poolImage: ubuntu-latest
  pythonVersion: 3.8


jobs:
- ${{ each package in parameters.packages }}:
  - job:
    displayName: "${{ format('Test {0}', package.Key) }}"
    pool:
      vmImage: ${{parameters.poolImage}}
        
    variables:
      condaFile: "${{ format('{0}/conda-{1}.yaml', parameters.baseDir, package.Value) }}"
      envArtifact: "${{ format('{0}-{1}', parameters.envInfoArtifactBase, package.Key) }}"
      testFile: "${{ format('{0}/test_{1}.py', parameters.baseDir, package.Value) }}"

    steps:

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH for Linux

    - bash: conda env create --name ${{parameters.condaEnv}} --file=$(condaFile)
      displayName: Create Anaconda environment

    - bash: |
        source activate ${{parameters.condaEnv}}
        pip install .
      displayName: Install Fairlearn

    # ====================================================

    - bash: mkdir ${{parameters.envInfoDir}}
      displayName: Create directory for environment information

    - bash: |
        source activate  ${{parameters.condaEnv}}
        pip freeze --all > ${{parameters.envInfoFileBase}}-${{package.Key}}-pip.txt
        conda list > ${{parameters.envInfoFileBase}}-${{package.Key}}-conda.txt
      displayName: "Gather environment information"
      workingDirectory: '${{parameters.envInfoDir}}'

    - task: PublishPipelineArtifact@1
      displayName: "Publish environment info to artifact $(envArtifact)"
      inputs:
        path: ${{parameters.envInfoDir}}
        artifact: $(envArtifact)
    
    # ====================================================

    - bash: |
        source activate ${{parameters.condaEnv}}
        python -m pytest $(testFile) --junitxml=./TEST-TEST.xml -o junit_suite_name="$(Agent.JobName)"
      displayName: Run tests for ${{package.Key}}
    
    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/TEST-*.xml'
      condition: succeededOrFailed()
    