parameters:
- name: stageName
  type: string
- name: previousStages
  type: string
  default: PredeploymentValidation
- name:  poolImage
  type: string
  default: 'ubuntu-latest'
- name: poolPythonVersion
  type: number
  default: 3.6
- name: releaseType
  type: string
  default: Test
  values:
  - Test
  - Prod
  - Production
- name: packageArtifactName
  type: string
- name: kvSubscription
  type: string
- name: kvVaultName
  type: string
- name: kvUsername
  type: string
- name: kvPassword
  type: string
- name: pypiUrl
  type: string

stages:
- stage: ${{parameters.stageName}}
  displayName: Upload Wheel to PyPI (${{parameters.releaseType}})
  dependsOn: ${{parameters.previousStages}}
  pool:
    vmImage: ${{parameters.poolImage}}

  jobs:
  - deployment: 'PyPI_${{parameters.releaseType}}_Upload'
    ${{ if eq(parameters.releaseType, 'Test')}}:
      environment: 'PyPI-Test Deployment'
    ${{ if eq(parameters.releaseType, 'Production')}}:
      environment: 'PyPI Deployment'
    pool:
      vmImage: ${{parameters.poolImage}}

    strategy:
      runOnce:
        deploy:
          steps:
            - task: UsePythonVersion@0
              displayName: 'Use Python ${{parameters.poolPythonVersion}}'
              inputs:
                versionSpec: ${{parameters.poolPythonVersion}}
                addToPath: true

            - task: AzureKeyVault@1
              displayName: "Fetch deployment secrets from KeyVault"
              inputs:
                azureSubscription: ${{parameters.kvSubscription}}
                keyVaultName:  ${{parameters.kvVaultName}}
                secretsFilter: '${{parameters.kvUsername}},${{parameters.kvPassword}}'

            - script: echo $(usernametest)
              displayName: "Check one"

            - script: echo $(${{parameters.kvUsername}})
              displayName: "Check two"

            - script: pip install twine
              displayName: 'Install twine'

            # Some ugliness until I can figure out why "Check two" isn't working in this pipeline (but works in the old release)
            - ${{ if eq(parameters.kvUsername, 'usernametest') }}:
              # Quote the password argument in case it contains characters the shell might try to parse
              - script: 'twine upload --verbose --repository-url ${{parameters.pypiUrl}} -u $(usernametest) -p "$(passwordtest)" $(Pipeline.Workspace)/${{parameters.packageArtifactName}}/*'
                displayName: "Run twine for upload"
  
  - job: PyPI_Pause
    pool: server
    dependsOn: 'PyPI_${{parameters.releaseType}}_Upload'

    steps:
    - task: Delay@1
      displayName: "Pause to allow PyPI updates to complete"
      inputs:
        delayForMinutes: "5"