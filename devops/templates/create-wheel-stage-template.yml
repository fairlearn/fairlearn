# Stage template to create a Wheel file

# Creates a Wheel and stores it in a specified Artifact. At the
# same time, it also extracts the version information, and places
# that in a separate Artifact (used later to download from PyPI)

parameters:
- name: stageName
  type: string
- name: previousStages
  type: string
  default: PredeploymentValidation
- name:  poolImage
  type: string
  default: 'ubuntu-latest'
- name: poolPythonVersion
  type: number
  default: 3.6
- name: packageArtifactName
  type: string
- name: versionArtifactName
  type: string
- name: versionFileName
  type: string
- name: freezeArtifactStem
  type: string
- name: freezeFile
  type: string

stages:
- stage: ${{parameters.stageName}}
  displayName: Create Wheel Artifact
  dependsOn: ${{parameters.previousStages}}
  pool:
    vmImage: ${{parameters.poolImage}}

  jobs:
  - job: CreateWheel
    displayName: Build and publish wheel
    pool:
      vmImage: ${{parameters.poolImage}}
    
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python ${{parameters.poolPythonVersion}}'
      inputs:
        versionSpec: ${{parameters.poolPythonVersion}}
        addToPath: true

    - template: python-infra-upgrade-steps-template.yml

    - script: pip install setuptools wheel 
      displayName: 'Install setuptools'

    - script: pip install -r requirements.txt
      displayName: "Install fairlearn requirements"

    - template: pip-freeze-to-artifact-steps-template.yml
      parameters:
        freezeArtifact: '${{parameters.freezeArtifactStem}}CreateWheel'
        freezeFile: ${{parameters.FreezeFile}}

    # TODO: add --assert-no-changes to validate that no changes happened to widget files (Issue #270)
    - script: python ./scripts/build_widget.py --yarn-path /usr/bin/yarn
      displayName: 'Build widget'

    # TODO: Simplify the build_wheels script to remove target type and dev version
    - script: python ./scripts/build_wheels.py --target-type Prod --version-filename ${{parameters.versionFilename}} --dev-version 0
      displayName: 'Build wheels'

    - task: PublishPipelineArtifact@1
      displayName: "Publish wheels"
      inputs:
        path: $(System.DefaultWorkingDirectory)/dist
        artifact: '${{parameters.packageArtifactName}}'

    - task: PublishPipelineArtifact@1
      displayName: "Publish version information file"
      inputs:
        path: '$(System.DefaultWorkingDirectory)/${{parameters.versionFilename}}'
        artifact: '${{parameters.versionArtifactName}}'
