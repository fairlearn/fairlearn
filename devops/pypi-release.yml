variables:
  poolImage: "ubuntu-latest"
  poolPythonVersion: 3.6

trigger: none # No CI build

pr: none # Not for pull requests


stages:
- stage: PreDeploymentValidation
  pool:
    vmImage: $(PoolImage)
    
  jobs:
  - template: all-tests-job-template.yml
    parameters:
      name: Linux
      vmImage: 'ubuntu-16.04' # Will want to add other platforms and pyVersions back in eventually
      pyVersions: [3.6] 

  - template: notebook-job-template.yml
    parameters:
      name: LinuxNotebooks
      vmImage: 'ubuntu-16.04'
      pyVersions: [3.6] # Will want to add other versions etc. back in eventually

  - template: unit-tests-pypi-job-template.yml
    parameters:
      name: ForTestOnly
      vmImage: 'ubuntu-16.04'
      pyVersions: [3.6]
      gitUrl: https://github.com/fairlearn/fairlearn.git
      gitCheckoutTarget: $(Build.SourceVersion)
      usePyPITest: true
      pipVersionfairlearn: 0.3.1


# =================================================================================================================

- stage: CreateTestPyPIPackage
  dependsOn:
  - PreDeploymentValidation

  jobs:
  - job: Create_PyPI_Test_Package
    pool:
      vmImage: $(PoolImage)

    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(poolPythonVersion)'
      inputs:
        versionSpec: $(poolPythonVersion)
        addToPath: true
    
    - script: pip install setuptools wheel 
      displayName: 'Install setuptools'

    - script: pip install -r requirements.txt
      displayName: "Install fairlearn requirements"

    - task: PowerShell@2
      name: BuildTestWheelsTask
      displayName: 'Build wheels for test'
      inputs:
        filePath: scripts/build-test-wheels.ps1
        pwsh: true

    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/dist
        artifact: TestPackages

    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/test-version.txt
        artifact: TestVersionFile
      
- stage: DeployToPyPITest
  dependsOn: CreateTestPyPIPackage
  jobs:
  - deployment: "Deploy_to_PyPI_Test"
    environment: "PyPI-Test Deployment"
    pool:
      vmImage: $(PoolImage)

    strategy:
      runOnce:
       deploy:
        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python $(poolPythonVersion)'
            inputs:
              versionSpec: $(poolPythonVersion)
              addToPath: true

          - script: pip install twine
            displayName: 'Install twine'

          - script: ls -R $(Pipeline.Workspace)
            displayName: "List files in Pipeline.Workspace"

          - script: echo "python twine upload --repository-url https://test.pypi.org/legacy/ $(Pipeline.Workspace)/TestPackages/*"
            displayName: "Upload to PyPI-Test"


# =================================================================================================================

- stage: TestDeploymentValidation
  dependsOn: DeployToPyPITest
  
  jobs:
  - job: "FetchTestPyPIVersion"
    pool:
      vmImage: $(PoolImage)

    steps:
    - checkout: none

    - task: UsePythonVersion@0
      displayName: 'Use Python $(poolPythonVersion)'
      inputs:
        versionSpec: $(poolPythonVersion)
        addToPath: true

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: TestVersionFile

    - task: PowerShell@2
      name: SetVariableTask
      displayName: 'Fetch PyPI-Test version from artifact'
      inputs:
        filePath: scripts/set-variable-from-file.ps1
        arguments: "-baseDir $(Pipeline.Workspace) -subDir . -fileName test-version.txt -targetVariable PyPITestVersion"
        pwsh: true

  - template: unit-tests-pypi-job-template.yml
    parameters:
      name: Linux
      vmImage: 'ubuntu-16.04'
      pyVersions: [3.6]
      gitUrl: https://github.com/fairlearn/fairlearn.git
      gitCheckoutTarget: $(Build.SourceVersion)
      usePyPITest: true
      pipVersionfairlearn: $[ dependencies.FetchTestPyPIVersion.outputs['SetVariableTask.PyPITestVersion'] ]
      prerequisiteJob: FetchTestPyPIVersion


  - job: "Validate_Test_Package_Notebooks"
    pool:
      vmImage: $(PoolImage)
    dependsOn: FetchTestPyPIVersion

    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(poolPythonVersion)'
      inputs:
        versionSpec: $(poolPythonVersion)
        addToPath: true

# =================================================================================================================

- stage: CreatePyPIPackage
  dependsOn:
  - TestDeploymentValidation

  jobs:
  - job: Create_PyPI_Package
    pool:
      vmImage: $(PoolImage)

    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(poolPythonVersion)'
      inputs:
        versionSpec: $(poolPythonVersion)
        addToPath: true
    
    - script: pip install setuptools wheel 
      displayName: 'Install setuptools'

    - script: pip install -r requirements.txt
      displayName: "Install fairlearn requirements"

    - script: python setup.py sdist bdist_wheel
      displayName: "Create wheels"

    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/dist
        artifact: Packages

              
- stage: DeployToPyPI
  dependsOn: CreatePyPIPackage
  jobs:
  - deployment: "Deploy_to_PyPI"
    environment: "PyPI Deployment"
    pool:
      vmImage: $(PoolImage)

    strategy:
      runOnce:
       deploy:
        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python $(poolPythonVersion)'
            inputs:
              versionSpec: $(poolPythonVersion)
              addToPath: true

          - script: pip install twine
            displayName: 'Install twine'

          - script: ls -R $(Pipeline.Workspace)
            displayName: "List files in Pipeline.Workspace"

          - script: echo "python twine upload $(Pipeline.Workspace)/Packages/*"
            displayName: "Upload to PyPI"