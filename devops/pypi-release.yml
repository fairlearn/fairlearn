variables:
  poolImage: "ubuntu-latest"
  poolPythonVersion: 3.6
  testPackageArtifact: TestPackages
  testVersionArtifact: TestVersion
  testVersionFilename: 'version-test.txt'
  prodPackageArtifact: ProdPackages
  prodVersionArtifact: ProdVersion
  prodVersionFilename: 'version.txt'

trigger: none # No CI build

pr: none # Not for pull requests


stages:
- stage: PreDeploymentValidation
  pool:
    vmImage: $(PoolImage)
    
  jobs:
  - template: all-tests-job-template.yml
    parameters:
      name: Linux
      vmImage: 'ubuntu-16.04' # Will want to add other platforms and pyVersions back in eventually
      pyVersions: [3.6] 

  # Remove notebooks in the interests of speed

  - template: unit-tests-pypi-job-template.yml
    parameters:
      name: ForTestOnly
      vmImage: 'ubuntu-16.04'
      pyVersions: [3.6]
      gitUrl: https://github.com/fairlearn/fairlearn.git
      gitCheckoutTarget: $(Build.SourceVersion)
      usePyPITest: true
      pipVersionfairlearn: 0.3.1


# =================================================================================================================

- template: pypi-deployment-stages-template.yml
  parameters:
    poolImage: $(PoolImage)
    targetType: 'Test'


# =================================================================================================================

- stage: TestDeploymentValidation
  dependsOn: DeployToPyPITest
  
  jobs:
  - template: unit-tests-pypi-job-template.yml
    parameters:
      name: Linux
      vmImage: 'ubuntu-16.04'
      pyVersions: [3.6]
      gitUrl: https://github.com/fairlearn/fairlearn.git
      gitCheckoutTarget: $(Build.SourceVersion)
      usePyPITest: true
      versionFileArtifact: $(testVersionArtifact)
      versionFileName: $(testVersionFilename)


# =================================================================================================================

- stage: CreatePyPIPackage
  dependsOn:
  - TestDeploymentValidation

  jobs:
  - job: Create_PyPI_Package
    pool:
      vmImage: $(PoolImage)

    steps:
    - template: create-wheel-step-template.yml
      parameters:
        isTest: 0
        packageArtifactName: $(prodPackageArtifact)
        versionArtifactName: $(prodVersionArtifact)
        versionFilename: $(prodVersionFilename)

              
- stage: DeployToPyPI
  dependsOn: CreatePyPIPackage
  jobs:
  - deployment: "Deploy_to_PyPI"
    environment: "PyPI Deployment"
    pool:
      vmImage: $(PoolImage)

    strategy:
      runOnce:
       deploy:
        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python $(poolPythonVersion)'
            inputs:
              versionSpec: $(poolPythonVersion)
              addToPath: true

          - script: pip install twine
            displayName: 'Install twine'

          - script: ls -R $(Pipeline.Workspace)
            displayName: "List files in Pipeline.Workspace"

          - script: echo "python twine upload $(Pipeline.Workspace)/Packages/*"
            displayName: "Upload to PyPI"