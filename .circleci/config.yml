# This CircleCI workflow builds our documentation into HTML pages.
# The generated pages are viewable as artifacts in CircleCI.
# CircleCI can be run on PRs from forks & allows viewing stored artifacts
# without download. Azure Pipelines and GitHub Actions currently don't
# support certain actions on PRs from forks so we can't use them for this.

version: 2.0

jobs:
  build-doc:
    docker:
      - image: cimg/python:3.11.5

    working_directory: ~/tmp-fairlearn
    steps:
      # check out PR branch
      - checkout

      - run:
          name: Show Python version
          command: python --version

      - run:
          name: Show Ubuntu version
          command: lsb_release -a

      - run:
          name: Update apt
          command: sudo apt update

      - run:
          name: Install pandoc
          command: sudo apt-get install pandoc pandoc-citeproc

      - run:
          name: Upgrade pip, setuptools, and wheel before installing other dependencies
          command: python -m pip install --upgrade pip setuptools wheel

      - run:
          name: 'Install required packages'
          command: |
            python scripts/install_requirements.py --pinned False
            pip install matplotlib>=3.2.1

      - run:
          name: "Build Documentation"
          command: make doc
          no_output_timeout: 30m

      - run:
          name: "Copy static pages"
          command: cp -r docs/static_landing_page/ docs/_build/

      - persist_to_workspace:
          root: docs/_build
          paths: 
            - html
            - static_landing_page

      # additionally store artifacts to make them viewable in the CircleCI UX
      - store_artifacts:
          path: docs/_build/html

  build-doctest:
    docker:
      - image: cimg/python:3.11.5

    working_directory: ~/tmp-fairlearn
    steps:
      # check out PR branch
      - checkout

      - run:
          name: Show Python version
          command: python --version

      - run:
          name: Show Ubuntu version
          command: lsb_release -a

      - run:
          name: Update apt
          command: sudo apt update

      - run:
          name: Install pandoc
          command: sudo apt-get install pandoc pandoc-citeproc

      - run:
          name: Upgrade pip, setuptools, and wheel before installing other dependencies
          command: python -m pip install --upgrade pip setuptools wheel

      - run:
          name: 'Install required packages'
          command: |
            python scripts/install_requirements.py --pinned False
            pip install matplotlib>=3.2.1

      - run:
          name: 'Build doctest'
          command: python -m sphinx -v -b doctest -n -j auto docs docs/_build/html
          no_output_timeout: 30m

  deploy-doc:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - add_ssh_keys:
          # To generate a new key:
          # ssh-keygen -t ed25519 -C "ci-build@fairlearn.org" -f output_key_file
          # Do not add a passphrase.
          # Upload public key as a deploy key to the website GH repository.
          # Upload private key to CircleCI as an SSH key at
          # https://app.circleci.com/settings/project/github/fairlearn/fairlearn#ssh.
          fingerprints:  # fingerprint of deploy (public) key
            - "b5:72:60:33:2a:d4:bb:28:0d:36:23:86:74:d3:c6:10"
      # Attach documentation generated in the 'doc' step so that it can be
      # deployed.
      - attach_workspace:
          at: doc/_build
      - run: ls -ltrh doc/_build/
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" =~ ^main$|^release/[0-9]+\.[0-9]$|^release/v[0-9]+\.[0-9]+\.[0-9,X]+$ ]]; then
              bash .circleci/push_doc.sh doc/_build/html
            fi

# This workflow defines the ordering, in this case build-doc needs to happen
# before deploy-doc.
workflows:
  version: 2
  build-webpage:
    jobs:
      - build-doc
      - build-doctest
      - deploy-doc:
          requires:
            - build-doc
          filters:
            branches:
              # don't deploy to GitHub pages from other branches
              only: /^main$|^release/v[0-9]+\.[0-9]$|^release/v[0-9]+\.[0-9]+\.[0-9,X]+$/
